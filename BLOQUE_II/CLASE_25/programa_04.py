"""
Archivo: programa_04.py
Autor: Edwin Yoner
Fecha: 08/03/2025

Descripci칩n:
    Este script carga un video, convierte cada fotograma a HSV,
    aplica una m치scara para detectar objetos dentro de un rango de color
    espec칤fico y guarda capturas cuando se detectan suficientes p칤xeles blancos.

Requisitos:
    - Instalar OpenCV si no est치 disponible: `pip install opencv-python`
    - Asegurar que el archivo "video/circles.avi" existe en la ruta correcta.
"""

# Importar bibliotecas necesarias
import cv2
import numpy as np

# Cargar el video
video = cv2.VideoCapture("video/circles.avi")

# Definir el rango de color en formato HSV (para detectar el objeto)
color_min = np.array([110, 80, 80])   # M칤nimo (H, S, V)
color_max = np.array([120, 255, 255]) # M치ximo (H, S, V)

# Contador de im치genes guardadas
contador_fotos = 0

# Definir el umbral de detecci칩n (cantidad de p칤xeles blancos necesarios para considerar un objeto detectado)
umbral_pixeles = 15000

# Bucle para procesar cada fotograma del video
while video.isOpened():
    # Leer el siguiente fotograma
    ret, frame = video.read()

    # Verificar si el fotograma se ley칩 correctamente
    if not ret:
        break

    # Convertir el fotograma de BGR a HSV
    frame_hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

    # Crear la m치scara de color
    mascara = cv2.inRange(frame_hsv, color_min, color_max)

    # Aplicar la operaci칩n bitwise AND para extraer el objeto detectado
    resultado = cv2.bitwise_and(frame, frame, mask=mascara)

    # Contar los p칤xeles blancos en la m치scara
    cantidad_pixeles_blancos = cv2.countNonZero(mascara)

    # Verificar si se detecta el objeto (seg칰n el umbral de p칤xeles blancos)
    if cantidad_pixeles_blancos > umbral_pixeles:
        print("游댳 Objeto Detectado")
        nombre_imagen = f"images/foto{contador_fotos}.jpg"
        cv2.imwrite(nombre_imagen, frame)  # Guardar la imagen del fotograma
        print(f"游닝 Imagen guardada: {nombre_imagen}")
        contador_fotos += 1

    # Mostrar los resultados en ventanas
    cv2.imshow("Video Original", frame)
    cv2.imshow("M치scara de Color", mascara)
    cv2.imshow("Detecci칩n AND", resultado)

    # Esperar 120 ms entre fotogramas y salir si se presiona la tecla 'a'
    if cv2.waitKey(120) == ord('a'):
        break

# Liberar recursos y cerrar ventanas
video.release()
cv2.destroyAllWindows()
